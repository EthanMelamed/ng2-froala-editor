{"version":3,"sources":["webpack:///./src/app.ts","webpack:///./src/main/Main.component.ts","webpack:///./src/froala/froala.component.ts","webpack:///./src/main/main.html"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["import { bootstrap }    from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from \"@angular/core\";\nimport { MainComponent } from './main/Main.component';\n\nenableProdMode();\nbootstrap(MainComponent);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app.ts\n **/","import {Component, OnInit, Input, Output, EventEmitter} from \"@angular/core\";\nimport {FroalaEditorCompnoent} from \"../froala/froala.component\";\n\ndeclare var require: any;\ndeclare var $: any;\n\n@Component({\n  selector: \"main\",\n  template: require('./main.html'),\n  directives: [FroalaEditorCompnoent]\n})\n\nexport class MainComponent implements OnInit {\n\n  text: string = '<div>hey whatsup, we are testing froala editor</div>';\n  editor1: any;\n  editor2: any;\n\n  froalaOptions: any = {\n    height: 300\n  };\n\n  froalaOptions2: any = {\n    charCounterCount: true\n  };\n\n  constructor() {\n\n  }\n\n  ngOnInit() {\n    \n  }\n  \n  onFroalaModelChanged(event: any) {\n    setTimeout(() => {\n      this.text = event;\n    });\n  }\n\n  onFroalaModelChanged2(event: any) {\n    setTimeout(() => {\n      this.text = event;\n    });\n  }\n\n  onEditorInitialized(event?: any) {\n    this.editor1 = FroalaEditorCompnoent.getFroalaInstance();\n    this.editor1.on('froalaEditor.contentChanged', (e, editor) => {\n      console.log(\"contentChanged\");\n    });\n    // console.log(this.editor1);\n  }\n  \n  onEditorInitialized2(event?: any) {\n    this.editor2 = FroalaEditorCompnoent.getFroalaInstance();\n    console.log(this.editor2);\n  }\n\n  testComponent() {\n    this.editor1.froalaEditor('codeView.toggle');\n    this.editor2.froalaEditor('codeView.toggle');\n  }\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/main/Main.component.ts\n **/","import {Component, OnInit, OnDestroy, Input, Output, EventEmitter, ElementRef } from '@angular/core';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'froala',\n  template:`<textarea></textarea>`\n})\n\nexport class FroalaEditorCompnoent implements OnInit, OnDestroy {\n\n  @Input() froalaData: string;\n  @Input() froalaOptions: any;\n  @Output() model: EventEmitter<any> = new EventEmitter();\n  @Output() editorInitialized: EventEmitter<any> = new EventEmitter();\n  private static froalaEditorInstance: any;\n  isEditorInitialized: Boolean = false;\n  froalaContent: any;\n\n  constructor(private el: ElementRef) {\n    \n  }\n\n  ngOnChanges(changes) {\n    if (changes.hasOwnProperty('froalaData') && this.isEditorInitialized) {\n      this.setContent();\n    }\n  }\n\n  ngOnInit() { \n    FroalaEditorCompnoent.froalaEditorInstance = $(this.el.nativeElement).find(\"textarea\");\n\n    // Initialize the listeners for froala editors\n    this.initListener();\n\n    this.froalaOptions = this.froalaOptions ? this.froalaOptions : {};\n    FroalaEditorCompnoent.froalaEditorInstance.froalaEditor(this.froalaOptions);\n  }\n\n  /**\n   * When component destroys, unset the initialized and contentChanged event \n   */\n  ngOnDestroy() { \n    FroalaEditorCompnoent.froalaEditorInstance.off(\"froalaEditor.initialized\");\n    FroalaEditorCompnoent.froalaEditorInstance.off(\"froalaEditor.contentChanged\");\n  }\n\n  /**\n   * Listen to initialized and content changed event\n   */\n  initListener() {\n    FroalaEditorCompnoent.froalaEditorInstance.on('froalaEditor.initialized', (e, editor) => {\n      this.isEditorInitialized = true;\n      if (this.froalaData) {\n        this.setContent();\n      }\n      this.getContent();\n      this.editorInitialized.emit(null);\n    });\n\n    FroalaEditorCompnoent.froalaEditorInstance.on('froalaEditor.contentChanged', (e, editor) => {\n      if (this.isEditorInitialized) {\n        this.getContent();\n      }\n    });\n  }\n\n  /**\n   * Set <p></p> into the editor when the editor has empty content\n   */\n  setDefaultContent() {\n    let content = \"<p></p>\";\n    FroalaEditorCompnoent.froalaEditorInstance.froalaEditor('html.set', content);\n    this.model.emit(content);\n  }\n\n  /**\n   * Set html content from the @Input() data\n   */\n  setContent() {\n    FroalaEditorCompnoent.froalaEditorInstance.froalaEditor('html.set', this.froalaData);\n  }\n\n  /**\n   * Get content from the editor and update the @Output() model\n   */\n  getContent() {\n    this.froalaContent = FroalaEditorCompnoent.froalaEditorInstance.froalaEditor('html.get', true);\n    if (!this.froalaContent) {\n      this.setDefaultContent();\n    }\n    else {\n      this.model.emit(this.froalaContent);\n    }\n  }\n\n  /**\n   * \n   * Returns a froalaEditorInstance that people can use to utilize the editor\n   * @static\n   * @returns [any] editor\n   */\n  static getFroalaInstance() {\n    return FroalaEditorCompnoent.froalaEditorInstance;\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/froala/froala.component.ts\n **/","module.exports = \"<h1>\\n  Hey I am testing Froala Editor\\n</h1>\\n<froala [froalaOptions]=\\\"froalaOptions\\\" [froalaData]=\\\"text\\\" (model)=\\\"onFroalaModelChanged($event)\\\" (editorInitialized)=\\\"onEditorInitialized()\\\"></froala>\\n<!--<froala [froalaOptions]=\\\"froalaOptions2\\\" [froalaData]=\\\"text\\\" (model)=\\\"onFroalaModelChanged2($event)\\\" (editorInitialized)=\\\"onEditorInitialized2()\\\"></froala>-->\\n\\n<button (click)=\\\"testComponent()\\\">Component</button>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/main.html\n ** module id = 330\n ** module chunks = 0\n **/"],"sourceRoot":""}